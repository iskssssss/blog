/**
 * jQuery.ScrollProgress.min
 * @author John Hopley (@johnjameshopley)
 * @version 1.0
 * (c) John Hopley 2015
 */
! function (s, i, n) {
  function r(t, o) {
    return this.elm = t, this.settings = s.extend({}, a, o), this._defaults = a, this._name = "scrollProgress", this.init(), this
  }
  var c = "scrollProgress",
    a = {
      trackHeight: 5,
      trackColor: "#eee",
      offset: 0,
      scrollToSpeed: 300
    };
  r.prototype = {
    sections: [],
    init: function () {
      var t = this;
      return s(this.elm).find("li").each(function () {
        t = t.setSection(s(this).attr("data-progress-scroll-target"), t), t.addProgressbar(this), t.addClickEvent(this, t)
      }), t.attachScrollEvents(t), console.log(t.sections), t
    },
    setSection: function (i, n) {
      var r = i;
      return e = s(r), o = e.position(), t = o.top - n.settings.offset, h = e.outerHeight(), b = t + h, obj = {
        name: r,
        target: e,
        top: t,
        bottom: b,
        height: h
      }, n.sections.push(obj), n
    },
    addProgressbar: function (t) {
      s(t).append(s("<div>", {
        "class": "section-progress-bar",
        style: "height:" + this.settings.trackHeight + "px; width:0%; background:" + this.settings.trackColor + ";"
      }))
    },
    addClickEvent: function (t, o) {
      s(t).on("click", function () {
        var t = s(this).attr("data-progress-scroll-target");
        return console.log(t), s("body,html").animate({
          scrollTop: s(t).position().top - o.settings.offset
        }, o.settings.scrollToSpeed), !1
      })
    },
    attachScrollEvents: function (t) {
      return t.checkScollStatus(t), s(i).scroll(function () {
        t.checkScollStatus(t)
      }), this
    },
    checkScollStatus: function (t) {
      for (var o, e = s(n).scrollTop(), i = 0, r = t.sections.length; r > i; i++) o = e >= t.sections[i].top && e <= t.sections[i].bottom ? Math.floor((e - t.sections[i].top) / (t.sections[i].bottom - t.sections[i].top) * 100) : e < t.sections[i].top ? 0 : 100, s('*[data-progress-scroll-target="' + t.sections[i].name + '"]').find(".section-progress-bar").css("width", o + "%")
    }
  }, s.fn[c] = function (t) {
    return this.each(function () {
      s.data(this, "plugin_" + c) || s.data(this, "plugin_" + c, new r(this, t))
    }), this
  }
}(jQuery, window, document);